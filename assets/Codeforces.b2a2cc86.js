import{d as E,G as O,K as P,v as f,Q as B,y as $,o as T,e as v,g as D,f as _,j as V,h as x,k as H,R as u,V as L,D as F}from"./index.8eb7f1c8.js";import{l as M}from"./load.b9090f49.js";import{c as G}from"./codeforces.fb07e744.js";import{_ as J,h as K,f as Q}from"./Contest.10a11c35.js";import"./c-table.e40cf269.js";import"./user-link.3a790128.js";import"./cf-rating-color.01cb42a5.js";import"./at-rating-color.049da702.js";const W=M(G),j=new Map;for(const i of W)i.type.startsWith("codeforces")&&j.set(i.id,i);function q(i){var d;return(d=j.get(+i))!=null?d:null}const I="https://codeforces.com/api/",z={key:0},X={key:1,class:"divide-y"},Y=_("h2",{class:"mb-2"},"\u9519\u8BEF",-1),Z={class:"pt-2"},ce=E({setup(i){const d=O(),N=P(),r=f(null),y=f(!1),g=f(!1),{start:R,end:w}=B(),h=f(!1),b=async s=>{var a,C;if(h.value)return;h.value=!0;const n=new URL(I+"contest.standings");n.searchParams.append("contestId",""+s.id),n.searchParams.append("handles",K.map(({h:e})=>e).join(";")),n.searchParams.append("showUnofficial","true");const{result:o}=await(await fetch(n.toString())).json();let c=0;s.problems=o.problems;for(const e of o.problems)e.problemUrl=`https://codeforces.com/contest/${e.contestId}/problem/${e.index}`;s.standings=[];for(const e of o.rows){if(e.party.participantType!==u.CONTESTANT&&e.party.participantType!==u.VIRTUAL&&e.party.participantType!==u.OUT_OF_COMPETITION&&e.party.participantType!==u.PRACTICE)continue;e.party.participantType!==u.PRACTICE&&c++;const k=e.problemResults.reduce((t,p)=>{var m,l;return p.points===0?t:t+((m=p.bestSubmissionTimeSeconds)!=null?m:0)+20*((l=p.rejectedAttemptCount)!=null?l:0)},0),S=(a=e.party.participantTime)!=null?a:s.startTime;s.standings.push({author:{members:e.party.members.map(t=>t.handle),teamName:(C=e.party.teamName)!=null?C:Q(e.party.members[0].handle),participantTime:S,participantType:e.party.participantType},rank:e.rank,solved:e.problemResults.filter(t=>t.points>0).length,penalty:k,submissions:e.problemResults.map((t,p)=>{const m=t.bestSubmissionTimeSeconds+S,l=t.bestSubmissionTimeSeconds;return t.points>0?{id:-1,creationTime:m,relativeTime:l,problemIndex:p,verdict:L.OK,dirty:t.rejectedAttemptCount}:t.rejectedAttemptCount>0?{id:-1,creationTime:m,relativeTime:l,problemIndex:p,dirty:t.rejectedAttemptCount}:null}).filter(t=>t!==null)})}s.participantNumber=c,h.value=!1},A=async s=>{const n=new URL(I+"contest.list"),o="codeforces/contest.list",{result:c}=sessionStorage.getItem(o)?{result:JSON.parse(sessionStorage.getItem(o))}:await(await fetch(n.toString())).json();sessionStorage.getItem(o)||sessionStorage.setItem(o,JSON.stringify(c));for(const a of c)if(a.id===s)return{type:"codeforces",name:a.name,startTime:a.startTimeSeconds,duration:a.durationSeconds,participantNumber:0,id:a.id,phase:a.phase,contestUrl:`https://codeforces.com/contest/${a.id}`,standingsUrl:`https://codeforces.com/contest/${a.id}/standings`}},U=()=>{b(r.value)};return $(()=>d.params,async s=>{if(s.id){R();const n=q(+s.id);if(n!==null)r.value=n,await b(r.value),document.title=`${n.name} - CPany`;else{const o=await A(+s.id);if(o)g.value=!0,r.value=o,await b(r.value),document.title=`${o.name} - CPany`;else{y.value=!0;const a=setTimeout(()=>N.replace({name:"Home"}),3e3);F(()=>clearTimeout(a))}}w()}},{immediate:!0}),(s,n)=>(T(),v("div",null,[r.value&&!y.value?(T(),v("div",z,[D(J,{contest:r.value,dynamic:g.value,onRefresh:U},null,8,["contest","dynamic"])])):y.value?(T(),v("div",X,[Y,_("p",Z,"\u672A\u627E\u5230 ID \u4E3A "+V(x(d).params.id)+" \u7684 Codeforces \u6BD4\u8D5B",1)])):H("v-if",!0)]))}});export{ce as default};
